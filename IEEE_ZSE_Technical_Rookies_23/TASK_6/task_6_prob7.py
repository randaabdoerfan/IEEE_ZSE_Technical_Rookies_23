# -*- coding: utf-8 -*-
"""TASK_6_prob7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z7ZCiffontEDXa1oQxALVxDy9UiZztmV
"""

from ctypes import Array
n, d = [int(r) for r in input().split()]
arr = [int(r) for r in input().split()]
def beutifaul(d, arr):
  n=len(arr)
  triplets = 0
  for i in range(n-2):
    for j in range(i + 1, n-1):
        if arr[j] - arr[i] == d:
            foundTrip = False
            for k in range(j + 1, n):
                if arr[k] - arr[j] == d:
                    triplets += 1
                    foundTrip = True
                    break
            if foundTrip == True:
                break
  return triplets
beutifaul(d,arr)